<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:georss="http://www.georss.org/georss">
  <channel>
    <title>Declaration of VAR</title>
    <link>https://retifrav.github.io/</link>
    <description>Recent content of Declaration of VAR</description>
    <language>en-us</language>
    <copyright>retif</copyright>
    
    <lastBuildDate>Thu, 16 Jun 2022 10:46:05 +0200</lastBuildDate>
    
    
        <atom:link href="https://retifrav.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LDAP authentication in ASP.NET Core MVC</title>
      <link>https://retifrav.github.io/blog/2022/06/16/dotnet-ldap-authentication/</link>
      <pubDate>Thu, 16 Jun 2022 10:46:05 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2022/06/16/dotnet-ldap-authentication/</guid>
      <description><![CDATA[New post: LDAP authentication in ASP.NET Core MVC]]></description>
      <content:encoded><![CDATA[<p>We needed to make a (<em>yet another</em>) internal portal/website for employees, but this time, as that would be an internal resource, we decided to utilize users accounts data provided via <a href="https://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol">LDAP</a> by our office&rsquo;s <a href="https://en.wikipedia.org/wiki/Active_Directory">Active Directory</a>, instead of (<em>yet again</em>) implementing &ldquo;local&rdquo; user identities like we did before with <a href="/blog/2018/03/20/csharp-dotnet-core-identity-mysql/">MySQL</a> and <a href="/blog/2020/10/17/dotnet-core-identity-postgresql/">PostgreSQL</a>.</p>


    <img class="image-post" loading="lazy" src="/blog/2022/06/16/dotnet-ldap-authentication/images/dotnet-core-ldap.png" alt=".NET Core LDAP">

<p>(<em>Of course</em>) we chose <a href="https://dotnet.microsoft.com/en-us/apps/aspnet">ASP.NET Core</a> MVC for making the portal. And as both ASP.NET and Active Directory have been around for a while, and given the fact that both come from the same vendor, one would expect that implementing Active Directory users authentication via LDAP in such a setup to be a well-known topic with detailed documentation, examples and a lot of tutorials available. But as fucking usual, it&rsquo;s not quite like that.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Querying astronomy databases in ADQL via TAP</title>
      <link>https://retifrav.github.io/blog/2022/02/26/astronomy-databases-tap-adql/</link>
      <pubDate>Sat, 26 Feb 2022 18:34:15 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/02/26/astronomy-databases-tap-adql/</guid>
      <description><![CDATA[New post: Querying astronomy databases in ADQL via TAP]]></description>
      <content:encoded><![CDATA[<p>There are several astronomy databases that store various information about space objects such as stars and planets. Some (<em>most?</em>) of those databases expose their data via <a href="https://www.ivoa.net/documents/TAP/">TAP</a> interface, so it can be queried using <a href="https://www.ivoa.net/documents/ADQL/">ADQL</a>.</p>


    <img class="image-post" loading="lazy" src="/blog/2022/02/26/astronomy-databases-tap-adql/images/tap-adql-sandbox.png" alt="TAP ADQL sandbox">

<p>Here I&rsquo;ll be telling about how to get data from such sources and what sort of issues/problems one can encounter.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Conan and resolving dependencies in a C&#43;&#43; project</title>
      <link>https://retifrav.github.io/blog/2022/02/06/cpp-dependencies-with-conan/</link>
      <pubDate>Sun, 06 Feb 2022 14:47:47 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/02/06/cpp-dependencies-with-conan/</guid>
      <description><![CDATA[New post: Conan and resolving dependencies in a C&#43;&#43; project]]></description>
      <content:encoded><![CDATA[<p>Like many other teams, we have a fair amount of 3rd-party dependencies in our project (<em>a C++-based SDK, that is</em>). Like fewer other teams, we store those dependencies source code right in our project repository and we build them together with the project sources every time. This is of course a tremendous waste of time and CPU cycles, as it would be much more efficient to build dependencies just once (<em>per version</em>) and link to already pre-built binaries.</p>



<figure class="with-original">
    <img class="image-post" loading="lazy" src="/blog/2022/02/06/cpp-dependencies-with-conan/images/conan-the-librarian.png" alt="Conan The Librarian">
    <footer>
        <small>
            <i><a href="https://igorcomics.blogspot.com/2017/11/conan-librarian.html">original picture</a></i>
        </small>
    </footer>
</figure>

<p>But where to store pre-built dependencies and how to fetch the correct variants for various platforms, toolchains and configurations? Our investigation on the matter led us to <a href="https://conan.io/">Conan</a> package manager.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>KeePass as internal secrets storage for a team</title>
      <link>https://retifrav.github.io/blog/2022/01/13/keepass-as-internal-secrets-storage/</link>
      <pubDate>Thu, 13 Jan 2022 21:53:34 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/01/13/keepass-as-internal-secrets-storage/</guid>
      <description><![CDATA[New post: KeePass as internal secrets storage for a team]]></description>
      <content:encoded><![CDATA[<p>For a long time in our team we&rsquo;ve been storing logins, passwords, keys and other things like that in personal password managers or just plain-text files, spread around people&rsquo;s machines, and no one had the full set. Finally, we decided to stop this chaos and start using one common passwords database.</p>


    <img class="image-post" loading="lazy" src="/blog/2022/01/13/keepass-as-internal-secrets-storage/images/keepassxc-passwords.png" alt="Passwords in KeePass XC">

<p>Having evaluated several options, we chose <a href="https://en.wikipedia.org/wiki/KeePass">KeePass</a>. It&rsquo;s not exactly meant for multi-user usage, but we came up with some sort of workaround.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Electric car in Norway, leasing BMW i3</title>
      <link>https://retifrav.github.io/blog/2021/12/16/electric-car-norway-leasing-bmw-i3/</link>
      <pubDate>Thu, 16 Dec 2021 23:15:19 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2021/12/16/electric-car-norway-leasing-bmw-i3/</guid>
      <description><![CDATA[New post: Electric car in Norway, leasing BMW i3]]></description>
      <content:encoded><![CDATA[<p>A couple of years ago we came to a point when having a car had become more of a necessity than a luxury. Having spent about a year to get norwegian driving license, we entered a leasing contract for a new BMW i3.</p>


    <img class="image-post" loading="lazy" src="/blog/2021/12/16/electric-car-norway-leasing-bmw-i3/images/bmw-i3.jpg" alt="BMW i3">

<p>Here I&rsquo;ll be talking about the leasing process and in general about the experience of owning an electric car in Norway.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Making a deb package with CMake/CPack and hosting it in a private APT repository</title>
      <link>https://retifrav.github.io/blog/2021/09/23/cmake-cpack-package-deb-apt/</link>
      <pubDate>Thu, 23 Sep 2021 11:26:15 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/09/23/cmake-cpack-package-deb-apt/</guid>
      <description><![CDATA[New post: Making a deb package with CMake/CPack and hosting it in a private APT repository]]></description>
      <content:encoded><![CDATA[<p><a href="/blog/2021/03/08/cmake-cpp-library/">Last time</a> I needed to handle a C++ library project with CMake. This time I was tasked with creating a deb package for one of the libraries in our SDK.</p>


    <img class="image-post" loading="lazy" src="/blog/2021/09/23/cmake-cpack-package-deb-apt/images/cmake-cpack-deb.png" alt="CMake, CPack, deb package">

<p>And what would you know, CMake can handle packaging too - with <a href="https://cmake.org/cmake/help/latest/module/CPack.html">CPack</a> utility.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Qt for WebAssembly and custom OpenGL via QQuickFramebufferObject</title>
      <link>https://retifrav.github.io/blog/2021/08/29/qt-webassembly-custom-opengl/</link>
      <pubDate>Sun, 29 Aug 2021 13:30:33 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/08/29/qt-webassembly-custom-opengl/</guid>
      <description><![CDATA[New post: Qt for WebAssembly and custom OpenGL via QQuickFramebufferObject]]></description>
      <content:encoded><![CDATA[<p>It is amazing what kind of crazy ideas people might come up with. One of our users decided that they want to use our visualization engine inside their Qt application on Windows and Linux (<em>so far so good</em>) and also to build a version for <a href="https://webassembly.org/">WebAssembly</a> to target web-browsers (<em>fucking hell</em>).</p>


    <img class="image-post" loading="lazy" src="/blog/2021/08/29/qt-webassembly-custom-opengl/images/qt-wasm-qquickframebufferobject.png" alt="Qt, WebAssembly, QQuickFramebufferObject">

<p>Very surprisingly to me, this actually works!</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Azure DevOps Artifacts package promotion</title>
      <link>https://retifrav.github.io/blog/2021/07/21/azure-devops-artifacts-promotion/</link>
      <pubDate>Wed, 21 Jul 2021 14:06:58 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/07/21/azure-devops-artifacts-promotion/</guid>
      <description><![CDATA[New post: Azure DevOps Artifacts package promotion]]></description>
      <content:encoded><![CDATA[<p>Some time after we started to publish our packages to <a href="/blog/2020/03/05/azure-devops-nuget-npm-cpp/">Azure DevOps Artifacts</a>, users told us that they cannot see new versions of the packages until those are &ldquo;<em>promoted to Release view</em>&rdquo;. And indeed, there is a concept of &ldquo;views&rdquo;, and packages can be &ldquo;promoted&rdquo; to certain views:</p>


    <img class="image-post" loading="lazy" src="/blog/2021/07/21/azure-devops-artifacts-promotion/images/package-version-promotion.png" alt="Azure DevOps Artifacts package version promotion">

<p>Apparently, that is the case when someone consumes packages not directly from your feed, but from their own feed with your feed being an upstream source.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>How to block Apple TV updates</title>
      <link>https://retifrav.github.io/blog/2021/07/11/appletv-how-to-block-updates/</link>
      <pubDate>Sun, 11 Jul 2021 15:47:46 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/07/11/appletv-how-to-block-updates/</guid>
      <description><![CDATA[New post: How to block Apple TV updates]]></description>
      <content:encoded><![CDATA[<p>Apparently, Apple thought that we will be delighted to get <em>fullscreen</em> update prompts on Apple TV like this one from time time but mostly when you expect them the least:</p>


    <img class="image-post" loading="lazy" src="/blog/2021/07/11/appletv-how-to-block-updates/images/apple-tv-fullscreen-update-prompt.jpg" alt="Apple TV fullscreen update prompt">

<p>They just show up randomly on system start or simply on top of an application, if you leave it unattended for some time. And there is no setting in system preferences which would allow you to disable those.</p>
<p>You can, however, blacklist Apple update servers with firewall or DNS, and that will stop these prompts from showing up.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>New server and remark42 comments</title>
      <link>https://retifrav.github.io/blog/2021/05/30/new-server-and-remark42-comments/</link>
      <pubDate>Sun, 30 May 2021 18:32:54 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/05/30/new-server-and-remark42-comments/</guid>
      <description><![CDATA[New post: New server and remark42 comments]]></description>
      <content:encoded><![CDATA[<p>I decided to move from <a href="https://pages.github.com/">GitHub Pages</a> to my own server with my own domain. Also I switched from commenting system based on <a href="/blog/2019/04/19/github-comments-hugo/">GitHub issues</a> to <a href="https://remark42.com/">remark42</a> comment engine.</p>


    <img class="image-post" loading="lazy" src="/blog/2021/05/30/new-server-and-remark42-comments/images/moving.jpg" alt="Moving to a new server">

<p>So the main website and the origin is now on <a href="https://decovar.dev/">https://decovar.dev/</a>, and <a href="https://retifrav.github.io/">https://retifrav.github.io/</a> will continue to exist as a mirror on GitHub Pages.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt certificate with acme.sh instead of Certbot</title>
      <link>https://retifrav.github.io/blog/2021/04/05/acme-sh-instead-of-certbot/</link>
      <pubDate>Mon, 05 Apr 2021 13:08:02 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/04/05/acme-sh-instead-of-certbot/</guid>
      <description><![CDATA[New post: Let&#39;s Encrypt certificate with acme.sh instead of Certbot]]></description>
      <content:encoded><![CDATA[<p>I needed to set-up a new website with HTTPS and so I took Let&rsquo;s Encrypt procedure from my past <a href="/blog/2017/11/28/several-domains-same-server-letsencrypt-tls/#lets-encrypt-certificate">instructions</a>. But to my surprise, <a href="https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx">Certbot</a> is installed via <a href="https://en.wikipedia.org/wiki/Snap_(package_manager)">Snap</a> now, which is just retarded. That discovery triggered me to remember that I read about other ways of getting Let&rsquo;s Encrypt certificate, such as <a href="http://acme.sh/">acme.sh</a>.</p>


    <img class="image-post" loading="lazy" src="/blog/2021/04/05/acme-sh-instead-of-certbot/images/lets-encrypt-acme.jpg" alt="acme.sh instead of Certbot" style="border:1px solid black;">

<p>On top of that, last month <a href="https://en.wikipedia.org/wiki/Electronic_Frontier_Foundation">Electronic Frontier Foundation</a> (<em>creators of Certbot</em>) announced that they <a href="https://www.eff.org/deeplinks/2021/03/statement-re-election-richard-stallman-fsf-board">have joined</a> the hounding of Richard Stallman, so now they can go fuck themselves for sure.</p>]]></content:encoded>
    </item>
    
  </channel>
</rss>
