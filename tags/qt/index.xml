<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Qt on Declaration of VAR</title>
    <link>https://retifrav.github.io/tags/qt/</link>
    <description>Recent content in Qt on Declaration of VAR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>retif</copyright>
    <lastBuildDate>Sun, 28 May 2023 20:46:09 +0200</lastBuildDate>
    <atom:link href="https://retifrav.github.io/tags/qt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building stuff from sources on Steam Deck</title>
      <link>https://retifrav.github.io/blog/2023/05/28/steam-deck-building-stuff-from-sources/</link>
      <pubDate>Sun, 28 May 2023 20:46:09 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2023/05/28/steam-deck-building-stuff-from-sources/</guid>
      <description>&lt;p&gt;My &lt;a href=&#34;https://retifrav.github.io/blog/2023/04/10/steam-deck/&#34;&gt;previous article&lt;/a&gt; about Steam Deck has exploded in size, so I decided to move the part about installing packages and building stuff into a separate article.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2023/05/28/steam-deck-building-stuff-from-sources/images/steam-deck-dock-mouse-keyboard.jpg&#34; alt=&#34;Steam Deck, Konsole in Desktop mode and docked with mouse and keyboard&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;But it&amp;rsquo;s not just already published parts, there are some new things too: in particular, I&amp;rsquo;ve managed to build Qt (&lt;em&gt;both shared and static configurations&lt;/em&gt;) and used it to build my own applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qt –Ω–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö</title>
      <link>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu-ru/</link>
      <pubDate>Sat, 24 Dec 2022 17:21:20 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu-ru/</guid>
      <description>&lt;p&gt;–≠—Ç–∞ —Å—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å –∫–∞–∫ –ø–µ—Ä–µ–≤–æ–¥ &lt;a href=&#34;https://blog.qt.io/blog/2018/05/03/qt-microncontrollers-mcu/&#34;&gt;–ø–æ—Å—Ç–∞&lt;/a&gt; (&lt;em&gt;–∫–æ—Ç–æ—Ä—ã–π –ø–æ—á–µ–º—É-—Ç–æ –±–æ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω&lt;/em&gt;) –∏–∑ –±–ª–æ–≥–∞ The Qt Company –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ &lt;a href=&#34;https://habr.com/&#34;&gt;–•–∞–±—Ä–µ&lt;/a&gt;. –ù–æ –ù–õ–û —Å–∫–∞–∑–∞–ª–æ, —á—Ç–æ —Å—Ç–∞—Ç—å—è —Ä–µ–∫–ª–∞–º–Ω–∞—è, –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–µ –¥–∞–ª–æ.&lt;/p&gt;&#xA;&lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/images/qt-on-mcu.jpg&#34; alt=&#34;Qt on MCU&#34;&gt;&#xA;&lt;p&gt;–Ø –±—ã –Ω–µ —Å–∫–∞–∑–∞–ª, —á—Ç–æ —ç—Ç–æ —Ä–µ–∫–ª–∞–º–Ω–∞—è —Å—Ç–∞—Ç—å—è, —Ö–æ—Ç—è –≤ –Ω–µ–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –≤–∏–¥–∞ &amp;ldquo;—Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞–º–∏&amp;rdquo; –∏ —Ç–∞–º –∏ —Å—è–º —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è. –ö–∞–∫ –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ, –Ω–∞ –•–∞–±—Ä–µ —Å—Ç–∞—Ç—å—è —Ç–∞–∫ –∏ –Ω–µ –≤—ã—à–ª–∞, –Ω–æ –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Å–ø—É—Å—Ç—è —á–µ—Ç—ã—Ä–µ –≥–æ–¥–∞ (&lt;em&gt;–ª—É—á—à–µ –ø–æ–∑–¥–Ω–æ, —á–µ–º –Ω–∏–∫–æ–≥–¥–∞&lt;/em&gt;) –≤—ã—Ö–æ–¥–∏—Ç –∑–¥–µ—Å—å.&lt;/p&gt;&#xA;&lt;p&gt;This article &lt;a href=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/&#34;&gt;in english&lt;/a&gt; üá∫üá∏.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qt on MCU</title>
      <link>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/</link>
      <pubDate>Sat, 24 Dec 2022 17:21:19 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/</guid>
      <description>&lt;p&gt;On the 2018-05-03 there was a post published in The Qt Company blog: &amp;ldquo;&lt;a href=&#34;https://blog.qt.io/blog/2018/05/03/qt-microncontrollers-mcu/&#34;&gt;Qt on Microcontrollers&lt;/a&gt;&amp;rdquo;. It was about the first PoC of Qt running on several selected MCUs. I say &amp;ldquo;was&amp;rdquo;, because for unknown reasons that post is no longer available in the Qt blog.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/images/qt-on-mcu.jpg&#34; alt=&#34;Qt on MCU&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;All the work on that PoC was single-handedly done by &lt;a href=&#34;https://linkedin.com/in/msvetkin&#34;&gt;Mikhail Svetkin&lt;/a&gt;, who was an embedded software developer in The Qt Company back at the time, and looks like the post was taken down at some point after he left the company (&lt;em&gt;Internet Archive has the last snapshot on &lt;a href=&#34;http://web.archive.org/web/20190502214913/https://blog.qt.io/blog/2018/05/03/qt-microncontrollers-mcu/&#34;&gt;2019-05-02&lt;/a&gt;&lt;/em&gt;). Perhaps the new project owner didn&amp;rsquo;t like something about that article?&lt;/p&gt;&#xA;&lt;p&gt;Anyway, I thought I&amp;rsquo;ll resurrect the post and publish it here for the history. Everything below is published almost as it was in the original post in the Qt blog.&lt;/p&gt;&#xA;&lt;p&gt;–≠—Ç–∞ —Å—Ç–∞—Ç—å—è &lt;a href=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu-ru/&#34;&gt;–Ω–∞ —Ä—É—Å—Å–∫–æ–º&lt;/a&gt; üá∑üá∫.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qt for WebAssembly and custom OpenGL via QQuickFramebufferObject</title>
      <link>https://retifrav.github.io/blog/2021/08/29/qt-webassembly-custom-opengl/</link>
      <pubDate>Sun, 29 Aug 2021 13:30:33 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/08/29/qt-webassembly-custom-opengl/</guid>
      <description>&lt;p&gt;It is amazing what kind of crazy ideas people might come up with. One of our users decided that they want to use our visualization engine inside their Qt application on Windows and Linux (&lt;em&gt;so far so good&lt;/em&gt;) and also to build a version for &lt;a href=&#34;https://webassembly.org/&#34;&gt;WebAssembly&lt;/a&gt; to target web-browsers (&lt;em&gt;fucking hell&lt;/em&gt;).&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2021/08/29/qt-webassembly-custom-opengl/images/qt-wasm-qquickframebufferobject.png&#34; alt=&#34;Qt, WebAssembly, QQuickFramebufferObject&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;Very surprisingly to me, this actually works!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building RetroShare on Mac OS</title>
      <link>https://retifrav.github.io/blog/2021/04/01/macos-building-retroshare/</link>
      <pubDate>Thu, 01 Apr 2021 21:14:20 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/04/01/macos-building-retroshare/</guid>
      <description>&lt;p&gt;A couple of weeks ago &lt;a href=&#34;https://retroshare.cc/&#34;&gt;RetroShare&lt;/a&gt; has released version &lt;a href=&#34;https://retroshareteam.wordpress.com/2021/03/15/release-notes-for-v0-6-6/&#34;&gt;0.6.6&lt;/a&gt;. But while download page offers quite a variety of pre-built packages for different operating systems, there is no 0.6.6 build for Mac OS (&lt;em&gt;only 0.6.5 is available&lt;/em&gt;).&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2021/04/01/macos-building-retroshare/images/retroshare-splash.png&#34; alt=&#34;RetroShare splash&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;I found this peculiar, so I decided to try to build it from sources myself. It also seemed like a good opportunity to finally try RetroShare, as it has been available for more than 15 years, and I&amp;rsquo;ve heard many good things about it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing Qt without installer</title>
      <link>https://retifrav.github.io/blog/2020/12/04/qt-without-installer/</link>
      <pubDate>Fri, 04 Dec 2020 21:28:53 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2020/12/04/qt-without-installer/</guid>
      <description>&lt;p&gt;At some point (&lt;em&gt;beginning of 2020 year&lt;/em&gt;) &lt;a href=&#34;https://www.qt.io/download-qt-installer&#34;&gt;Qt installer&lt;/a&gt; started to require users to have &lt;a href=&#34;http://account.qt.io/&#34;&gt;Qt Account&lt;/a&gt; (&lt;em&gt;again&lt;/em&gt;), otherwise you can&amp;rsquo;t proceed with the installation. More details in the Qt&amp;rsquo;s official &lt;a href=&#34;https://www.qt.io/blog/qt-offering-changes-2020&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2020/12/04/qt-without-installer/images/qt-installer-account.png&#34; alt=&#34;Qt installer, account&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;That&amp;rsquo;s something that &lt;a href=&#34;https://www.qt.io/blog/2015/05/04/new-unified-qt-online-installer-available&#34;&gt;already happened before&lt;/a&gt;, but back then community got really mad about it, so The Qt Company &lt;a href=&#34;https://www.qt.io/blog/2015/05/06/changing-qt-account-to-be-optional-in-the-online-installer&#34;&gt;reverted that&lt;/a&gt;, and installer started to work without Qt Account. And now they fucking did it again, and apparently this time community wasn&amp;rsquo;t that mad (&lt;em&gt;or there is nothing left of that community after all the stunts The Qt Company has been pulling over the past years&lt;/em&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Anyway, I won&amp;rsquo;t tolerate such anal-probing, so The Qt Company (&lt;em&gt;or rather its management&lt;/em&gt;) can go fuck itself, and I&amp;rsquo;ll be just building Qt from sources - it&amp;rsquo;s not that scary as it sounds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New Qt blog retarded design</title>
      <link>https://retifrav.github.io/blog/2019/11/24/qt-blog-new-ugly-design/</link>
      <pubDate>Sun, 24 Nov 2019 12:55:03 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2019/11/24/qt-blog-new-ugly-design/</guid>
      <description>&lt;p&gt;Geniuses from Qt marketing team have (again) changed the website design. The blog now looks especially retarded:&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2019/11/24/qt-blog-new-ugly-design/images/qt-blog-retarded.png&#34; alt=&#34;New retarded Qt blog design&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;I couldn&amp;rsquo;t tolerate this, so I wrote a custom CSS for &lt;a href=&#34;https://add0n.com/stylus.html&#34;&gt;Stylus&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Amazon, MXNet and Qt - The Great Robot Arm challenge</title>
      <link>https://retifrav.github.io/blog/2019/11/10/amazon-mxnet-qt-demo/</link>
      <pubDate>Sun, 10 Nov 2019 18:27:31 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2019/11/10/amazon-mxnet-qt-demo/</guid>
      <description>&lt;p&gt;This February on the &lt;a href=&#34;https://www.embedded-world.de/en&#34;&gt;Embedded World 2019&lt;/a&gt; event in Nuremberg The Qt Company had a joint demo together with Amazon - &amp;ldquo;The Great Robot Arm Challenge&amp;rdquo;.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;video  controls=&#34;yes&#34; loop=&#34;yes&#34;  class=&#34;video&#34;&gt;&#xD;&#xA;    &lt;source src=&#34;https://files.decovar.dev/public/blog/amazon-mxnet-qt-demo/robot-arm-challenge-mxnet-qt.mp4&#34; type=&#34;video/mp4&#34;&gt;&#xD;&#xA;&lt;/video&gt;&#xD;&#xA;&#xD;&#xA;&lt;p class=&#34;video-fallback&#34;&gt;If video doesn&#39;t play in your browser, you can download it &lt;a href=&#34;https://files.decovar.dev/public/blog/amazon-mxnet-qt-demo/robot-arm-challenge-mxnet-qt.mp4&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xD;&#xA;&#xD;&#xA;&#xA;&lt;p&gt;Amazon guys wrote a &lt;a href=&#34;https://medium.com/apache-mxnet/the-learning-robot-1c2deab8f375&#34;&gt;good article&lt;/a&gt; covering the deep-learning part. In turn, I wanted to tell about the Qt part.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Yet another new set of Qt icons</title>
      <link>https://retifrav.github.io/blog/2019/06/22/qt-yet-another-new-icon/</link>
      <pubDate>Sat, 22 Jun 2019 14:10:13 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2019/06/22/qt-yet-another-new-icon/</guid>
      <description>&lt;p&gt;Not that long ago Qt logo and other stuff &lt;a href=&#34;https://blog.qt.io/blog/2016/04/13/making-the-qt-brand-remarkable/&#34;&gt;got rebranded&lt;/a&gt;, and most of the Qt tools got new icons. But then some freshly hired demiurge from the design team apparently decided that those are just boring and came up with a new design, which in my arrogant opinion is basically a piece of shit:&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2019/06/22/qt-yet-another-new-icon/images/qt-creator-new-icon.png&#34; alt=&#34;Qt Creator new icon&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;Just what kind of designer would get an idea that this diagonally-mutilated two-color thingy (with &lt;em&gt;all&lt;/em&gt; capital letters!) is better than the current nice and clean version? I reckon, a very creative and talented kind.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual Studio Code and CMake for Qt</title>
      <link>https://retifrav.github.io/blog/2019/05/11/vscode-cmake-qt/</link>
      <pubDate>Sat, 11 May 2019 15:00:23 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2019/05/11/vscode-cmake-qt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://blog.qt.io/blog/2017/05/29/qbs-1-8-released/&#34;&gt;After&lt;/a&gt; &lt;a href=&#34;https://blog.qt.io/blog/2017/09/05/qbs-1-9-released/&#34;&gt;numerous&lt;/a&gt; &lt;a href=&#34;https://blog.qt.io/blog/2017/12/07/qbs-1-10-released/&#34;&gt;promises&lt;/a&gt; of how &lt;a href=&#34;https://doc.qt.io/qbs/index.html&#34;&gt;Qbs&lt;/a&gt; will be the Qt&amp;rsquo;s default build system, The Qt Company suddenly &lt;a href=&#34;https://blog.qt.io/blog/2018/10/29/deprecation-of-qbs/&#34;&gt;killed it&lt;/a&gt;, announced that &lt;a href=&#34;https://doc.qt.io/qt-5/qmake-manual.html&#34;&gt;qmake&lt;/a&gt; is a dead man walking too, and actually Qt is switching to &lt;a href=&#34;https://cmake.org&#34;&gt;CMake&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;So I guess we should start using CMake for building Qt applications as well. Let&amp;rsquo;s see then what it takes to switch from qmake to CMake with a couple of basic examples.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2019/05/11/vscode-cmake-qt/images/qt-cmake-vscode.png&#34; alt=&#34;Qt, CMake and Visual Studio Code&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;I also wanted to try Qt development with Visual Studio Code, and now is a good occasion for that.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
