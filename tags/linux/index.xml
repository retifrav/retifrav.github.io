<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Declaration of VAR</title>
    <link>https://retifrav.github.io/tags/linux/</link>
    <description>Recent content in Linux on Declaration of VAR</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>retif</copyright>
    <lastBuildDate>Fri, 16 Aug 2024 16:49:19 +0200</lastBuildDate>
    <atom:link href="https://retifrav.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Home Assistant on Vero V with Docker</title>
      <link>https://retifrav.github.io/blog/2024/08/16/home-assistant-on-vero-with-docker/</link>
      <pubDate>Fri, 16 Aug 2024 16:49:19 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2024/08/16/home-assistant-on-vero-with-docker/</guid>
      <description>&lt;p&gt;Eventually I got tired of constantly &lt;a href=&#34;https://retifrav.github.io/blog/2019/12/26/appletv-kodi-network-share/#install-kodi&#34;&gt;re-signing and re-uploading&lt;/a&gt; Kodi to my Apple TV (&lt;em&gt;and &lt;a href=&#34;https://retifrav.github.io/blog/2019/12/26/appletv-kodi-network-share/#updates&#34;&gt;being stuck&lt;/a&gt; with an old version&lt;/em&gt;). So I got a &lt;a href=&#34;https://osmc.tv/vero/&#34;&gt;Vero V&lt;/a&gt; instead, and immediately it became clear that I should have done so from the beginning, buying Apple TV was a mistake. Like I said before, if not for running Kodi, Apple TV is a &lt;a href=&#34;https://retifrav.github.io/blog/2019/12/26/appletv-kodi-network-share/#whats-wrong-with-apple-tv&#34;&gt;pretty useless&lt;/a&gt; device (&lt;em&gt;especially now that I have a TV that supports &lt;a href=&#34;https://apple.com/airplay/&#34;&gt;AirPlay&lt;/a&gt;&lt;/em&gt;).&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2024/08/16/home-assistant-on-vero-with-docker/images/vero-v-sonoff-zigbee.jpg&#34; alt=&#34;Vero V with connected SONOFF Zigbee 3.0 USB Dongle Plus-E&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;Around the same time I entered the domain of home automation. At first it was just &lt;a href=&#34;https://homely.no&#34;&gt;Homely&lt;/a&gt; (&lt;em&gt;a norwegian home security system&lt;/em&gt;), which comes with their own hub and a (&lt;em&gt;not very large&lt;/em&gt;) set of supported devices/sensors. But soon enough I discovered that it&amp;rsquo;s all just a &lt;a href=&#34;https://en.wikipedia.org/wiki/Zigbee&#34;&gt;Zigbee&lt;/a&gt; network wrapped into a user-friendly package, so I could do more with my own hub and a much wider (&lt;em&gt;and cheaper&lt;/em&gt;) collection of devices and sensors. Shortly after that realization I stumbled upon &lt;a href=&#34;https://home-assistant.io&#34;&gt;Home Assistant&lt;/a&gt;, as all roads lead to it, and, you guessed it right, I decided to run it on that same Vero V.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building stuff from sources on Steam Deck</title>
      <link>https://retifrav.github.io/blog/2023/05/28/steam-deck-building-stuff-from-sources/</link>
      <pubDate>Sun, 28 May 2023 20:46:09 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2023/05/28/steam-deck-building-stuff-from-sources/</guid>
      <description>&lt;p&gt;My &lt;a href=&#34;https://retifrav.github.io/blog/2023/04/10/steam-deck/&#34;&gt;previous article&lt;/a&gt; about Steam Deck has exploded in size, so I decided to move the part about installing packages and building stuff into a separate article.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2023/05/28/steam-deck-building-stuff-from-sources/images/steam-deck-dock-mouse-keyboard.jpg&#34; alt=&#34;Steam Deck, Konsole in Desktop mode and docked with mouse and keyboard&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;But it&amp;rsquo;s not just already published parts, there are some new things too: in particular, I&amp;rsquo;ve managed to build Qt (&lt;em&gt;both shared and static configurations&lt;/em&gt;) and used it to build my own applications.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Steam Deck</title>
      <link>https://retifrav.github.io/blog/2023/04/10/steam-deck/</link>
      <pubDate>Mon, 10 Apr 2023 14:24:31 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2023/04/10/steam-deck/</guid>
      <description>&lt;p&gt;If you play games (&lt;em&gt;actual games, not &lt;a href=&#34;https://files.decovar.dev/public/blog/steam-deck/drake-no-games.mp4&#34;&gt;press-X-to-win blurry movies&lt;/a&gt;&lt;/em&gt;), then undoubtly you have heard about &lt;a href=&#34;https://steamdeck.com/&#34;&gt;Steam Deck&lt;/a&gt;. If you haven&amp;rsquo;t, then you can probably just go watch some more of your favorite titles on PS/Xbox/Switch/whatsthename instead of reading this wall of text.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2023/04/10/steam-deck/images/steam-deck-space-rangers-screenshot.jpg&#34; alt=&#34;Steam Deck, Космические рейнджеры&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;Yes, I&amp;rsquo;ve got my very own Steam Deck too. And as many have already said, it does exceed all the expectations (&lt;em&gt;and then some&lt;/em&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>KeePass as internal secrets storage for a team</title>
      <link>https://retifrav.github.io/blog/2022/01/13/keepass-as-internal-secrets-storage/</link>
      <pubDate>Thu, 13 Jan 2022 21:53:34 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/01/13/keepass-as-internal-secrets-storage/</guid>
      <description>&lt;p&gt;For a long time in our team we&amp;rsquo;ve been storing logins, passwords, keys and other things like that in personal password managers or just plain-text files, spread around people&amp;rsquo;s machines, and no one had the full set. Finally, we decided to stop this chaos and start using one common passwords database.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2022/01/13/keepass-as-internal-secrets-storage/images/keepassxc-passwords.png&#34; alt=&#34;Passwords in KeePass XC&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;Having evaluated several options, we chose &lt;a href=&#34;https://en.wikipedia.org/wiki/KeePass&#34;&gt;KeePass&lt;/a&gt;. It&amp;rsquo;s not exactly meant for multi-user usage, but we came up with some sort of workaround.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making a deb package with CMake/CPack and hosting it in a private APT repository</title>
      <link>https://retifrav.github.io/blog/2021/09/23/cmake-cpack-package-deb-apt/</link>
      <pubDate>Thu, 23 Sep 2021 11:26:15 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/09/23/cmake-cpack-package-deb-apt/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://retifrav.github.io/blog/2021/03/08/cmake-cpp-library/&#34;&gt;Last time&lt;/a&gt; I needed to handle a C++ library project with CMake. This time I was tasked with creating a deb package for one of the libraries in our SDK.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2021/09/23/cmake-cpack-package-deb-apt/images/cmake-cpack-deb.png&#34; alt=&#34;CMake, CPack, deb package&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;And what would you know, CMake can handle packaging too - with &lt;a href=&#34;https://cmake.org/cmake/help/latest/module/CPack.html&#34;&gt;CPack&lt;/a&gt; utility.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New server and Remark42 comments</title>
      <link>https://retifrav.github.io/blog/2021/05/30/new-server-and-remark42-comments/</link>
      <pubDate>Sun, 30 May 2021 18:32:54 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/05/30/new-server-and-remark42-comments/</guid>
      <description>&lt;p&gt;I decided to move from &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; to my own server with my own domain. Also I switched from commenting system based on &lt;a href=&#34;https://retifrav.github.io/blog/2019/04/19/github-comments-hugo/&#34;&gt;GitHub issues&lt;/a&gt; to &lt;a href=&#34;https://remark42.com/&#34;&gt;Remark42&lt;/a&gt; comment engine.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2021/05/30/new-server-and-remark42-comments/images/moving.jpg&#34; alt=&#34;Moving to a new server&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;So the main website and the origin is now on &lt;a href=&#34;https://decovar.dev/&#34;&gt;https://decovar.dev/&lt;/a&gt;, and &lt;a href=&#34;https://retifrav.github.io/&#34;&gt;https://retifrav.github.io/&lt;/a&gt; will continue to exist as a mirror on GitHub Pages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Let&#39;s Encrypt certificate with acme.sh instead of Certbot</title>
      <link>https://retifrav.github.io/blog/2021/04/05/acme-sh-instead-of-certbot/</link>
      <pubDate>Mon, 05 Apr 2021 13:08:02 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/04/05/acme-sh-instead-of-certbot/</guid>
      <description>&lt;p&gt;I needed to set-up a new website with HTTPS and so I took Let&amp;rsquo;s Encrypt procedure from my past &lt;a href=&#34;https://retifrav.github.io/blog/2017/11/28/several-domains-same-server-letsencrypt-tls/#lets-encrypt-certificate&#34;&gt;instructions&lt;/a&gt;. But to my surprise, &lt;a href=&#34;https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx&#34;&gt;Certbot&lt;/a&gt; is installed via &lt;a href=&#34;https://en.wikipedia.org/wiki/Snap_(package_manager)&#34;&gt;Snap&lt;/a&gt; now, which is just retarded. That discovery triggered me to remember that I read about other ways of getting Let&amp;rsquo;s Encrypt certificate, such as &lt;a href=&#34;http://acme.sh/&#34;&gt;acme.sh&lt;/a&gt;.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2021/04/05/acme-sh-instead-of-certbot/images/lets-encrypt-acme.jpg&#34; alt=&#34;acme.sh instead of Certbot&#34; style=&#34;border:1px solid black;&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;On top of that, last month &lt;a href=&#34;https://en.wikipedia.org/wiki/Electronic_Frontier_Foundation&#34;&gt;Electronic Frontier Foundation&lt;/a&gt; (&lt;em&gt;creators of Certbot&lt;/em&gt;) announced that they &lt;a href=&#34;https://www.eff.org/deeplinks/2021/03/statement-re-election-richard-stallman-fsf-board&#34;&gt;have joined&lt;/a&gt; the hounding of Richard Stallman (&lt;em&gt;here&amp;rsquo;s a &lt;a href=&#34;./images/eff-hounding-stallman.png&#34;&gt;screenshot&lt;/a&gt;, &amp;ldquo;just in case&amp;rdquo;&lt;/em&gt;), so now they can go fuck themselves for sure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gollum - Git-based Markdown wiki</title>
      <link>https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/</link>
      <pubDate>Thu, 07 Jan 2021 13:30:42 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/</guid>
      <description>&lt;p&gt;We needed to create an internal knowledge base, preferably based on a wiki-engine. The requirements were:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;in-house hosting&lt;/li&gt;&#xA;&lt;li&gt;simple maintenance&lt;/li&gt;&#xA;&lt;li&gt;no vendor-lock - ideally, storing articles as plain-text files&lt;/li&gt;&#xA;&lt;li&gt;customization and styling&lt;/li&gt;&#xA;&lt;li&gt;not overloaded with gigabytes of fancy JS-frameworks&lt;/li&gt;&#xA;&lt;li&gt;version control&lt;/li&gt;&#xA;&lt;li&gt;Markdown markup&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;From my own researching and evaluating, there are very few wikis that meet all the requirements, and out of those &lt;a href=&#34;https://en.wikipedia.org/wiki/Gollum_Wiki&#34;&gt;Gollum&lt;/a&gt; seems to be the best.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/images/gollum-markdown.png&#34; alt=&#34;Gollum wiki (original picture: https://www.deviantart.com/aronimo717/art/Hobbit-Gollum-431742580)&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;Even though it has its own &lt;a href=&#34;https://github.com/gollum/gollum/wiki/Installation&#34;&gt;installation guide&lt;/a&gt;, for me that wasn&amp;rsquo;t enough, so here are my guides for Linux and Mac OS, plus some customizing and tweaking.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Data compression in IIS, Apache and NGINX</title>
      <link>https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/</link>
      <pubDate>Wed, 12 Aug 2020 15:27:42 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/</guid>
      <description>&lt;p&gt;Some of our users are residing in areas with very slow or/and metered internet connection, so the amount of data transferred is very important to them. And since web servers do support data compression, enabling it can certainly improve the situation for such users.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/images/web-servers-compression.png&#34; alt=&#34;Web servers compression&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;We took IIS, Apache and NGINX and ran some tests to see how compression is configured in each of them and to compare how well do they do it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TeamCity Prometheus metrics in Grafana</title>
      <link>https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/</link>
      <pubDate>Tue, 14 Jul 2020 19:16:58 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/</guid>
      <description>&lt;p&gt;Since we added a &lt;a href=&#34;https://grafana.com&#34;&gt;Grafana&lt;/a&gt; instance to our infrastructure, we started visualizing absolutely every single thing with it. So no wonder that eventually we turned our eyes to TeamCity.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/images/grafana-teamcity.png&#34; alt=&#34;TeamCity metrics in Grafana&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;In &lt;a href=&#34;https://blog.jetbrains.com/teamcity/2019/09/teamcity-2019-2-eap2-is-out/&#34;&gt;2019.2 release&lt;/a&gt; TeamCity started exposing its &lt;a href=&#34;https://www.jetbrains.com/help/teamcity/what-s-new-in-teamcity-2019-2.html#WhatsNewinTeamCity2019.2-Metricsreporting&#34;&gt;metrics&lt;/a&gt; in &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; format, and that&amp;rsquo;s how Grafana can get those, as Prometheus is one of its &lt;a href=&#34;https://grafana.com/docs/grafana/latest/features/datasources/&#34;&gt;supported data sources&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
