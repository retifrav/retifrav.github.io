<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Declaration of VAR</title>
    <link>https://retifrav.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on Declaration of VAR</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>retif</copyright>
    <lastBuildDate>Sun, 05 Jan 2020 23:25:26 +0100</lastBuildDate>
    <atom:link href="https://retifrav.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Adding search capability to a Hugo-based blog</title>
      <link>https://retifrav.github.io/blog/2020/01/05/hugo-search/</link>
      <pubDate>Sun, 05 Jan 2020 23:25:26 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2020/01/05/hugo-search/</guid>
      <description>&lt;p&gt;I was working on the documentation for some project, and chose to use Hugo for it. Fits perfectly, but lacks the searching functionality. So I implemented it there, and also decided to add it to my blog too.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2020/01/05/hugo-search/images/search.png&#34; alt=&#34;Search&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;It is actually a bit surprising why I didn&amp;rsquo;t think about it earlier. But then again, using Google&amp;rsquo;s site-specific search (&lt;a href=&#34;https://www.google.com/search?q=ololo+site%3Aretifrav.github.io&#34;&gt;ololo site:retifrav.github.io&lt;/a&gt;) should be good enough for that purpose already, so I just didn&amp;rsquo;t bother to do something else.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The fuck is this CORS and how do I send my bloody request</title>
      <link>https://retifrav.github.io/blog/2019/10/10/the-fuck-is-this-cors/</link>
      <pubDate>Thu, 10 Oct 2019 18:42:34 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2019/10/10/the-fuck-is-this-cors/</guid>
      <description>&lt;p&gt;So I was working on some web view and I needed to send an &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&#34;&gt;XMLHttpRequest&lt;/a&gt; using JS. Usually I was working with my own backend, but this time it was a different remote host (&lt;em&gt;our &lt;a href=&#34;https://www.jetbrains.com/youtrack/&#34;&gt;YouTrack&lt;/a&gt; instance&lt;/em&gt;), and my request failed with the following error:&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2019/10/10/the-fuck-is-this-cors/images/firefox-cors-missing-header.png&#34; alt=&#34;Firefox, missing CORS header&#34;&gt;&#xD;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cross&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Origin&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Request&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Blocked&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Same&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Origin&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Policy&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;disallows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;reading&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;remote&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;http://some.host?params&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ololo&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Reason&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CORS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;header&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;’&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;missing&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Cross&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Origin&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Request&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Blocked&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;The&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Same&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Origin&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Policy&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;disallows&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;reading&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;the&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;remote&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;resource&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;at&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;http://some.host?params&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ololo&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Reason&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CORS&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;request&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;did&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;succeed&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;That&amp;rsquo;s how I learnt about the existence of CORS, as it turned out I never sent cross-origin requests before.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Проверка текстов на вашем сайте</title>
      <link>https://retifrav.github.io/blog/2018/01/30/glvrd-on-your-website/</link>
      <pubDate>Tue, 30 Jan 2018 20:27:16 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2018/01/30/glvrd-on-your-website/</guid>
      <description>&lt;p&gt;Тут запилили &lt;a href=&#34;https://glvrd.ru&#34;&gt;форму для проверки текстов&lt;/a&gt; пресс-релизов и другого маркетинга, чтобы в мире было поменьше &amp;ldquo;&lt;em&gt;не знающих аналогов эффективных систем для всех задач&lt;/em&gt;&amp;rdquo;. Называется Главред, но к &lt;a href=&#34;https://glavred.livejournal.com&#34;&gt;Яблокову&lt;/a&gt;, судя по всему, отношения не имеет.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2018/01/30/glvrd-on-your-website/images/html-glvrd-logo.png&#34; alt=&#34;HTML Главред логотип&#34;&gt;&#xD;&#xA;&#xA;&lt;p&gt;Причём не просто форму, а целый &lt;a href=&#34;https://glvrd.ru/api/&#34;&gt;API&lt;/a&gt;, который можно прикрутить к себе на сайт. И хотя в их примере уже показано, как это делается, я покажу ещё и свой пример.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Escape HTML for highlighting</title>
      <link>https://retifrav.github.io/blog/2016/07/12/escape-html/</link>
      <pubDate>Tue, 12 Jul 2016 10:56:33 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2016/07/12/escape-html/</guid>
      <description>&lt;p&gt;When you are trying to highlight some code that contains special characters, this can mess up your markup. So you need to escape some characters first, for example replace all &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;gt;&lt;/code&gt;. I used &lt;a href=&#34;http://www.theukwebdesigncompany.com/articles/entity-escape-characters.php&#34;&gt;this page&lt;/a&gt; to find the codes.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ve had enough of copy-paste-replace-this-replace-that-copy-paste, so I created a page of my own that does at least replacing part:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://retifrav.github.io/wapps/escape-html-for-highlighting/escape.html&#34; style=&#34;font-size:18px; font-weight:bold;&#34;&gt;Escape your HTML for highlighting&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The core of the replacing mechanism is this RegEx:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Проверка введённых данных о паспорте РФ</title>
      <link>https://retifrav.github.io/blog/2015/06/21/check-passport/</link>
      <pubDate>Sun, 21 Jun 2015 13:09:36 +0300</pubDate>
      <guid>https://retifrav.github.io/blog/2015/06/21/check-passport/</guid>
      <description>&lt;p&gt;Решил поделиться накопленными JS-велосипедами форматно-логического контроля вводимых пользователем данных о паспорте РФ. Список проверок:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Починка таймстампов в SRT после Google Translate</title>
      <link>https://retifrav.github.io/blog/2015/03/21/fix-timing-in-translated-subs/</link>
      <pubDate>Sat, 21 Mar 2015 20:07:58 +0300</pubDate>
      <guid>https://retifrav.github.io/blog/2015/03/21/fix-timing-in-translated-subs/</guid>
      <description>&lt;p&gt;Проблема в том, что если закинуть в &lt;a href=&#34;https://translate.google.ru/&#34;&gt;Google Translate&lt;/a&gt; содержимое &lt;code&gt;SRT&lt;/code&gt; файла, то после перевода Гугол изломает таймстампы, из-за чего субтитры перестанут восприниматься плеерами и другими приложениями.&lt;/p&gt;&#xA;&lt;p&gt;Я запилил небольшой скрипт, который починяет таймстампы обратно в нормальный вид.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
