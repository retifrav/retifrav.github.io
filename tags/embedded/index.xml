<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>embedded on Declaration of VAR</title>
    <link>https://retifrav.github.io/tags/embedded/</link>
    <description>Recent content in embedded on Declaration of VAR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>retif</copyright>
    <lastBuildDate>Sat, 24 Dec 2022 17:21:20 +0100</lastBuildDate>
    <atom:link href="https://retifrav.github.io/tags/embedded/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Qt –Ω–∞ –º–∏–∫—Ä–æ–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö</title>
      <link>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu-ru/</link>
      <pubDate>Sat, 24 Dec 2022 17:21:20 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu-ru/</guid>
      <description>&lt;p&gt;–≠—Ç–∞ —Å—Ç–∞—Ç—å—è —Å–æ–∑–¥–∞–≤–∞–ª–∞—Å—å –∫–∞–∫ –ø–µ—Ä–µ–≤–æ–¥ &lt;a href=&#34;https://blog.qt.io/blog/2018/05/03/qt-microncontrollers-mcu/&#34;&gt;–ø–æ—Å—Ç–∞&lt;/a&gt; (&lt;em&gt;–∫–æ—Ç–æ—Ä—ã–π –ø–æ—á–µ–º—É-—Ç–æ –±–æ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω&lt;/em&gt;) –∏–∑ –±–ª–æ–≥–∞ The Qt Company –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–∞ &lt;a href=&#34;https://habr.com/&#34;&gt;–•–∞–±—Ä–µ&lt;/a&gt;. –ù–æ –ù–õ–û —Å–∫–∞–∑–∞–ª–æ, —á—Ç–æ —Å—Ç–∞—Ç—å—è —Ä–µ–∫–ª–∞–º–Ω–∞—è, –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–µ –¥–∞–ª–æ.&lt;/p&gt;
&lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/images/qt-on-mcu.jpg&#34; alt=&#34;Qt on MCU&#34;&gt;
&lt;p&gt;–Ø –±—ã –Ω–µ —Å–∫–∞–∑–∞–ª, —á—Ç–æ —ç—Ç–æ —Ä–µ–∫–ª–∞–º–Ω–∞—è —Å—Ç–∞—Ç—å—è, —Ö–æ—Ç—è –≤ –Ω–µ–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –≤–∏–¥–∞ &amp;ldquo;—Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞–º–∏&amp;rdquo; –∏ —Ç–∞–º –∏ —Å—è–º —É–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è. –ö–∞–∫ –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ, –Ω–∞ –•–∞–±—Ä–µ —Å—Ç–∞—Ç—å—è —Ç–∞–∫ –∏ –Ω–µ –≤—ã—à–ª–∞, –Ω–æ –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Å–ø—É—Å—Ç—è —á–µ—Ç—ã—Ä–µ –≥–æ–¥–∞ (&lt;em&gt;–ª—É—á—à–µ –ø–æ–∑–¥–Ω–æ, —á–µ–º –Ω–∏–∫–æ–≥–¥–∞&lt;/em&gt;) –≤—ã—Ö–æ–¥–∏—Ç –∑–¥–µ—Å—å.&lt;/p&gt;
&lt;p&gt;This article &lt;a href=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/&#34;&gt;in english&lt;/a&gt; üá∫üá∏.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Qt on MCU</title>
      <link>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/</link>
      <pubDate>Sat, 24 Dec 2022 17:21:19 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/</guid>
      <description>&lt;p&gt;On the 2018-05-03 there was a post published in The Qt Company blog: &amp;ldquo;&lt;a href=&#34;https://blog.qt.io/blog/2018/05/03/qt-microncontrollers-mcu/&#34;&gt;Qt on Microcontrollers&lt;/a&gt;&amp;rdquo;. It was about the first PoC of Qt running on several selected MCUs. I say &amp;ldquo;was&amp;rdquo;, because for unknown reasons that post is no longer available in the Qt blog.&lt;/p&gt;


    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu/images/qt-on-mcu.jpg&#34; alt=&#34;Qt on MCU&#34;&gt;

&lt;p&gt;All the work on that PoC was single-handedly done by &lt;a href=&#34;https://linkedin.com/in/msvetkin&#34;&gt;Mikhail Svetkin&lt;/a&gt;, who was an embedded software developer in The Qt Company back at the time, and looks like the post was taken down at some point after he left the company (&lt;em&gt;Internet Archive has the last snapshot on &lt;a href=&#34;http://web.archive.org/web/20190502214913/https://blog.qt.io/blog/2018/05/03/qt-microncontrollers-mcu/&#34;&gt;2019-05-02&lt;/a&gt;&lt;/em&gt;). Perhaps the new project owner didn&amp;rsquo;t like something about that article?&lt;/p&gt;
&lt;p&gt;Anyway, I thought I&amp;rsquo;ll resurrect the post and publish it here for the history. Everything below is published almost as it was in the original post in the Qt blog.&lt;/p&gt;
&lt;p&gt;–≠—Ç–∞ —Å—Ç–∞—Ç—å—è &lt;a href=&#34;https://retifrav.github.io/blog/2022/12/24/qt-on-mcu-ru/&#34;&gt;–Ω–∞ —Ä—É—Å—Å–∫–æ–º&lt;/a&gt; üá∑üá∫.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Amazon, MXNet and Qt - The Great Robot Arm challenge</title>
      <link>https://retifrav.github.io/blog/2019/11/10/amazon-mxnet-qt-demo/</link>
      <pubDate>Sun, 10 Nov 2019 18:27:31 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2019/11/10/amazon-mxnet-qt-demo/</guid>
      <description>&lt;p&gt;This February on the &lt;a href=&#34;https://www.embedded-world.de/en&#34;&gt;Embedded World 2019&lt;/a&gt; event in Nuremberg The Qt Company had a joint demo together with Amazon - &amp;ldquo;The Great Robot Arm Challenge&amp;rdquo;.&lt;/p&gt;






&lt;video  controls=&#34;yes&#34; loop=&#34;yes&#34;  class=&#34;video&#34;&gt;
    &lt;source src=&#34;https://files.decovar.dev/public/blog/amazon-mxnet-qt-demo/robot-arm-challenge-mxnet-qt.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

&lt;p class=&#34;video-fallback&#34;&gt;If video doesn&#39;t play in your browser, you can download it &lt;a href=&#34;https://files.decovar.dev/public/blog/amazon-mxnet-qt-demo/robot-arm-challenge-mxnet-qt.mp4&#34;&gt;here&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;Amazon guys wrote a &lt;a href=&#34;https://medium.com/apache-mxnet/the-learning-robot-1c2deab8f375&#34;&gt;good article&lt;/a&gt; covering the deep-learning part. In turn, I wanted to tell about the Qt part.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to upgrade U-Boot</title>
      <link>https://retifrav.github.io/blog/2018/10/11/upgrading-uboot/</link>
      <pubDate>Thu, 11 Oct 2018 15:12:08 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2018/10/11/upgrading-uboot/</guid>
      <description>&lt;p&gt;Yet another manual about upgrading &lt;a href=&#34;https://en.wikipedia.org/wiki/Das_U-Boot&#34;&gt;U-Boot&lt;/a&gt; on your development board.&lt;/p&gt;


    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2018/10/11/upgrading-uboot/images/uboot.png&#34; alt=&#34;U-Boot&#34;&gt;

&lt;p&gt;With a &lt;a href=&#34;https://boundarydevices.com/product/sabre-lite-imx6-sbc/&#34;&gt;Boundary Devices i.MX6 SABRE Lite&lt;/a&gt; device as an example.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Feed FlightAware</title>
      <link>https://retifrav.github.io/blog/2018/05/27/feed-flightaware/</link>
      <pubDate>Sun, 27 May 2018 18:21:17 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2018/05/27/feed-flightaware/</guid>
      <description>&lt;p&gt;To put it (very) simple, &lt;a href=&#34;https://flightaware.com&#34;&gt;FlightAware&lt;/a&gt; is a company that tracks air-planes. And they provide public access to the tracking data, although with some limitations. To lift those limitations and to gain some other features you can either purchase a &lt;a href=&#34;https://flightaware.com/commercial/premium/&#34;&gt;Premium Account&lt;/a&gt;, or feed FlightAware with data.&lt;/p&gt;


    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2018/05/27/feed-flightaware/images/flight-aware-logo.png&#34; alt=&#34;FlightAware logo&#34;&gt;

&lt;p&gt;But how does this feeding works?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boot to Qt on WaRP7</title>
      <link>https://retifrav.github.io/blog/2018/05/02/b2qt-warp7/</link>
      <pubDate>Wed, 02 May 2018 21:12:08 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2018/05/02/b2qt-warp7/</guid>
      <description>&lt;p&gt;A new interesting reference device &lt;a href=&#34;http://doc.qt.io/archives/qt-5.9-devicecreation/qtee-changelog.html#boot-to-qt-5-9-0&#34;&gt;was added&lt;/a&gt; in Qt 5.9 - &lt;a href=&#34;https://www.element14.com/community/docs/DOC-79058&#34;&gt;WaRP7&lt;/a&gt;. What&amp;rsquo;s so interesting about this device? It&amp;rsquo;s small, it&amp;rsquo;s based on &lt;a href=&#34;https://www.nxp.com/products/processors-and-microcontrollers/applications-processors/i.mx-applications-processors/i.mx-7-processors/i.mx-7solo-processors-heterogeneous-processing-with-arm-cortex-a7-and-cortex-m4-cores:i.MX7S&#34;&gt;i.MX 7Solo&lt;/a&gt; processor, and it features the following: Wi-Fi, Bluetooth, NFC, camera, barometer, accelerometer, magnetometer and gyroscope. It also has a battery and (optional) round display.&lt;/p&gt;


    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2018/05/02/b2qt-warp7/images/b2qt-warp7.png&#34; alt=&#34;Boot to Qt on WaRP7&#34;&gt;

&lt;p&gt;Being added as a reference device means that there is a pre-built &lt;a href=&#34;http://doc.qt.io/QtForDeviceCreation/qtee-about-b2qt.html&#34;&gt;Boot to Qt&lt;/a&gt; image for it, so let&amp;rsquo;s take a look.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Startup script in Boot to Qt image</title>
      <link>https://retifrav.github.io/blog/2017/12/08/b2qt-startup-script/</link>
      <pubDate>Fri, 08 Dec 2017 15:41:19 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2017/12/08/b2qt-startup-script/</guid>
      <description>&lt;p&gt;Well, actually this applies to (I guess) any Linux system, but I needed it for Boot to Qt image, so&amp;hellip;&lt;/p&gt;


    &lt;img class=&#34;image-post&#34; loading=&#34;lazy&#34; src=&#34;https://retifrav.github.io/blog/2017/12/08/b2qt-startup-script/images/bin-bash-b2qt.png&#34; alt=&#34;Bash, Qt, Yocto&#34;&gt;</description>
    </item>
    <item>
      <title>Qt at the Embedded World 2017</title>
      <link>https://retifrav.github.io/blog/2017/03/31/qt-ew2017/</link>
      <pubDate>Fri, 31 Mar 2017 12:57:19 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2017/03/31/qt-ew2017/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://habrahabr.ru/post/325198/#ew&#34;&gt;–≠—Ç–∞ —Å—Ç–∞—Ç—å—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º üá∑üá∫&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.embedded-world.de/en&#34;&gt;Embedded World 2017&lt;/a&gt; is an annual event about embedded platforms and everything related to it. Here you can find hardware vendors (development boards, devices, micro-controllers from Intel, NVIDIA, Toradex, NXP, Qualcomm and others), software companies (operating systems and frameworks from Microsoft, QNX, Green Hills, Wind River and others), and also lots of service companies.&lt;/p&gt;
&lt;p&gt;And of course The Qt Company &lt;a href=&#34;https://youtu.be/2i2b-9aU-s0&#34;&gt;participated&lt;/a&gt; as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boot to Qt with custom app</title>
      <link>https://retifrav.github.io/blog/2017/03/08/boot-to-qt-custom-app/</link>
      <pubDate>Wed, 08 Mar 2017 10:27:38 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2017/03/08/boot-to-qt-custom-app/</guid>
      <description>&lt;p&gt;So, you have &lt;a href=&#34;http://localhost:4000/blog/2016/06/14/boot-to-qt/&#34;&gt;Boot to Qt image&lt;/a&gt; and your device boots into default Qt&amp;rsquo;s demo launcher. But now you want to deploy your application to the device and boot to it instead of demo launcher.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how to do that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Boot to Qt on Raspberry Pi</title>
      <link>https://retifrav.github.io/blog/2016/07/25/b2qt-raspberry-pi/</link>
      <pubDate>Mon, 25 Jul 2016 16:25:04 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2016/07/25/b2qt-raspberry-pi/</guid>
      <description>&lt;p&gt;I got &lt;a href=&#34;https://www.raspberrypi.org/products/raspberry-pi-3-model-b/&#34;&gt;Raspberry Pi 3 Model B&lt;/a&gt; and now will use it for my experiments with &lt;a href=&#34;https://www.qt.io/qt-for-device-creation/&#34;&gt;Qt for embedded projects&lt;/a&gt;. Here I&amp;rsquo;ll tell about assembling process of the board and will run &lt;a href=&#34;https://retifrav.github.io/blog/2016/06/14/boot-to-qt/&#34;&gt;Boot to Qt&lt;/a&gt; demo on it.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
